<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.whalegoods.mapper.GoodsAdsMiddleMapper">
  <resultMap id="BaseResultMap" type="com.whalegoods.entity.GoodsAdsMiddle">
  <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="goods_code" jdbcType="VARCHAR" property="goodsCode" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="start_hms" jdbcType="VARCHAR" property="startHms" />
    <result column="end_hms" jdbcType="VARCHAR" property="endHms" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="device_id" jdbcType="VARCHAR" property="deviceId" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="sale_price" jdbcType="DECIMAL" property="salePrice" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
  </resultMap>
  
  <sql id="Base_Column_List">
    a.id,
    a.goods_code,
    a.sale_price,
    a.start_date,
    a.end_date,
    a.start_hms,
    a.end_hms,
    a.type,
    a.device_id,
    <!-- 此时的原货道设置价格变成了原价 -->
    c.sale_price market_price,
    b.pic_url,
    b.goods_name,
    d.short_name
  </sql>
  
  <!-- 查询当前设备已有的促销时间段 -->
     <select id="selectTimeRangeByDeviceId" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT 
            <choose>  
            <when test="type==1">  
                a.start_hms,a.end_hms
            </when>  
            <when test="type==2">  
                a.start_date,a.end_date
            </when>  
        </choose> 
    FROM goods_ads_middle a 
    INNER JOIN  goods_sku b ON b.goods_code=a.goods_code
    INNER JOIN device_road c ON c.goods_sku_id=b.id
    INNER JOIN device d ON  d.id=a.device_id
    <where>
     <if test="deviceId !=null and deviceId !=''"> AND a.device_id=#{deviceId}</if>
    </where>
    GROUP BY
            <choose>  
            <when test="type==1">  
                a.start_hms
            </when>  
            <when test="type==2">  
                a.start_date
            </when>  
        </choose> 
  </select>
  
   <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT  
    a.id,
    a.sale_price,
    a.goods_code,
    a.device_id,
    a.start_date,
    a.end_date,
    a.start_hms,
    a.end_hms
    FROM goods_ads_middle a 
    INNER JOIN  goods_sku b ON b.goods_code=a.goods_code
    INNER JOIN device d ON  d.id=a.device_id
    WHERE a.id= #{_parameter}
  </select>
  
    <!-- 查询促销商品列表(柜机API)-->
    <select id="selectAdsMiddleList" parameterType="com.whalegoods.entity.request.ReqGetAdsMiddleList" resultMap="BaseResultMap">
    SELECT  <include refid="Base_Column_List" />  FROM goods_ads_middle a 
  INNER JOIN goods_sku b 
    ON b.goods_code = a.goods_code 
  INNER JOIN device d  ON d.id = a.device_id 
  INNER JOIN device_road c ON c.device_id=a.device_id AND c.goods_sku_id=b.id
    <where>
     <if test="device_code_wg !=null and device_code_wg !=''"> AND d.device_id_jp=#{device_code_wg}</if>
     <if test="device_code_sup !=null and device_code_sup !=''"> AND d.device_id_supp=#{device_code_sup}</if>
    </where>
     GROUP BY a.goods_code,a.start_hms,a.start_date
  </select>
  
      <!--查询未上架商品的设备-->
    <select id="selectNotUpDevice" resultType="java.lang.String">
    SELECT  d.short_name  FROM goods_ads_middle a 
	    INNER JOIN  goods_sku b ON b.goods_code=a.goods_code
	    INNER JOIN device d ON  d.id=a.device_id
	    LEFT JOIN device_road c ON c.device_id=a.device_id AND c.goods_sku_id = b.id
	  WHERE c.sale_price IS NULL
	       GROUP BY d.short_name
  </select>
  
      <!-- 查询促销商品列表(ERP)-->
    <select id="selectListByObjCdt" parameterType="com.whalegoods.entity.GoodsAdsMiddle" resultMap="BaseResultMap">
    SELECT  <include refid="Base_Column_List" />  FROM goods_ads_middle a 
    INNER JOIN  goods_sku b ON b.goods_code=a.goods_code
    INNER JOIN device d ON  d.id=a.device_id
    LEFT JOIN device_road c ON c.device_id=a.device_id AND c.goods_sku_id = b.id
    <where>
     <if test="deviceId !=null and deviceId !=''"> AND d.id=#{deviceId}</if>
     <if test="goodsCode !=null and goodsCode !=''"> AND a.goods_code=#{goodsCode}</if>
    </where>
    GROUP BY a.goods_code,a.device_id,a.start_hms,a.start_date
    ORDER BY d.short_name,a.start_hms,a.start_date 
  </select>
  
        <!-- 查询最新的促销的价格-->
    <select id="selectLastSalePrice" parameterType="java.lang.String" resultType="java.lang.Double">
    SELECT a.sale_price FROM goods_ads_middle a 
    INNER JOIN  goods_sku b ON b.goods_code=a.goods_code
    INNER JOIN device d ON  d.id=a.device_id
    WHERE a.goods_code= #{_parameter} GROUP BY a.sale_price LIMIT 3 
  </select>
  
  <!-- 插入新记录 -->
    <insert id="insert" parameterType="com.whalegoods.entity.GoodsAdsMiddle">
    INSERT INTO goods_ads_middle (
    id,
    goods_code, 
    sale_price,
    start_date, 
    end_date,
    start_hms,
    end_hms,
    type,
    device_id,
    create_by,
    create_date,
    update_by,
    update_date)
    VALUES (
    #{id},
    #{goodsCode}, 
    #{salePrice}, 
    #{startDate}, 
    #{endDate},
    #{startHms},
    #{endHms},
    #{type},
    #{deviceId},
    #{createBy}, 
    now(),
    #{updateBy},
    now()
    )
  </insert>
  
    <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO goods_ads_middle (
    id,
    goods_code, 
    sale_price,
    start_date, 
    end_date,
    start_hms,
    end_hms,
    type,
    device_id,
    create_by,
    create_date,
    update_by,
    update_date)
    VALUES
    <foreach collection="list" item="item" index="index"  separator=",">
  (
    #{item.id},
    #{item.goodsCode}, 
    #{item.salePrice}, 
    #{item.startDate}, 
    #{item.endDate},
    #{item.startHms},
    #{item.endHms},
    #{item.type},
    #{item.deviceId},
    #{item.createBy}, 
    now(),
    #{item.updateBy},
    now()
  )
    </foreach>
 </insert>
  
  	<update id="updateByObjCdt" parameterType="com.whalegoods.entity.GoodsAdsMiddle">
		UPDATE goods_ads_middle a 
		INNER JOIN  goods_sku b ON b.goods_code=a.goods_code
        INNER JOIN device d ON  d.id=a.device_id
	   <set>
      <if test="goodsCode != null and goodsCode != ''">a.goods_code=#{goodsCode},</if>
      <if test="salePrice != null and salePrice != ''">a.sale_price=#{salePrice},</if>
      <if test="updateBy != null and updateBy != '' ">a.update_by = #{updateBy}, </if>
      a.update_date = now(),
      </set>
        <where>
        <if test="id !=null and id !=''"> AND a.id =#{id}</if>
    </where>
	</update>
	
	 <update id="updateKeepSamePrice" parameterType="com.whalegoods.entity.GoodsAdsMiddle">
		UPDATE goods_ads_middle a 
		INNER JOIN  goods_sku b ON b.goods_code=a.goods_code
        INNER JOIN device d ON  d.id=a.device_id
	   <set>
      <if test="salePrice != null and salePrice != ''">a.sale_price=#{salePrice},</if>
      a.update_date = now(),
      </set>
        <where>
        <if test="goodsCode !=null and goodsCode !=''"> AND a.goods_code =#{goodsCode}</if>
        <if test="deviceId !=null and deviceId !=''"> AND a.device_id =#{deviceId}</if>
    </where>
	</update>
	
	 <select id="selectCountByMapCdt" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT COUNT(id) FROM goods_ads_middle
    <where>
     <if test="deviceId !=null and deviceId !=''"> AND device_id=#{deviceId}</if>
     <if test="goodsCode !=null and goodsCode !=''"> AND goods_code=#{goodsCode}</if>
     <if test="startHms !=null and startHms !=''"> AND start_hms=#{startHms}</if>
     <if test="endHms !=null and endHms !=''"> AND end_hms=#{endHms}</if>
     <if test="id !=null and id !=''"> AND id!=#{id}</if>
    </where>
  </select>
  
     <delete id="deleteById" parameterType="java.lang.String">
    DELETE FROM goods_ads_middle  WHERE id = #{_parameter}
  </delete>

</mapper>